head(select(chicago,-(city:dptp)))
# except les col entre city  et dptp
# sinon
i <- match("city", names(chicago))
j <- match("dptp", names(chicago))
head(chicago[,i:j])
# filter()
chic.f <- filter(chicago, pm25tmean2 > 30)
head(chic.f,10)
X
test <- filter(X, var2 > 6)
test
# semble ne pas prendre les NA
chic.f <- filter(chicago, pm25tmean2 > 30 & tmpd > 80)
head(chic.f,10)
?filter()
# arrange
chicago <- arrange(chicago,date)
head(chicago)
tail(chicago)
chicago <- arrange(chicago,desc(date))
head(chicago)
tail(chicago)
# rename
chicago <- rename(chicago,pm25 = pm25tmean2, dewpoint = dptp)
head(chicago)
mean(chicago$pm25,na.rm = TRUE)
sd(chicago$pm25,na.rm = TRUE)
# mutate() (transform existing var / create new var)
chicago <- mutate(chicago, pm25detrend = pm25-mean(pm25, na.rm = TRUE)) # centrer la var
mean(chicago$pm25detrend,na.rm = TRUE)
chicago <- mutate(chicago, pm25detrend = (pm25-mean(pm25, na.rm = TRUE))/sd(pm25,na.rm = TRUE))
?sd()
head(chicago)
head(select(chicago,pm25, pm25detrend))
mean(chicago$pm25detrend,na.rm = TRUE)
sd(chicago$pm25detrend,na.rm = TRUE)
# group by
chicago <- mutate(chicago, tempcat = factor( 1 * (tmpd > 80), labels = c("cold","hot")))
table(chicago$tempcat)
hotcold <- group_by(chicago, tempcat)
hotcold
class(hotcold)
summarise(hotcold)
summary(hotcold)
hotcold <- group_by(chicago, tempcat)
library(dplyr)
#--------------------------------
# arrange / filter / select / mutate / rename
# by Hadley Wickham
# provides a grammar for data manipulation
chicago <- readRDS("./data/chicago.rds")
dim(chicago)
str(chicago)
names(chicago)
colSums(is.na(chicago))
all(colSums(is.na(chicago))==0)
summary(chicago)
# Select()
head(select(chicago,city:dptp))
class(select(chicago,city:dptp))
# donne les colonnes entre city & dptp
head(select(chicago,-(city:dptp)))
# except les col entre city  et dptp
# sinon
i <- match("city", names(chicago))
j <- match("dptp", names(chicago))
head(chicago[,i:j])
# filter()
chic.f <- filter(chicago, pm25tmean2 > 30)
head(chic.f,10)
X
test <- filter(X, var2 > 6)
test
# semble ne pas prendre les NA
chic.f <- filter(chicago, pm25tmean2 > 30 & tmpd > 80)
head(chic.f,10)
?filter()
# arrange
chicago <- arrange(chicago,date)
head(chicago)
tail(chicago)
chicago <- arrange(chicago,desc(date))
head(chicago)
tail(chicago)
# rename
chicago <- rename(chicago,pm25 = pm25tmean2, dewpoint = dptp)
head(chicago)
mean(chicago$pm25,na.rm = TRUE)
sd(chicago$pm25,na.rm = TRUE)
# mutate() (transform existing var / create new var)
chicago <- mutate(chicago, pm25detrend = pm25-mean(pm25, na.rm = TRUE)) # centrer la var
mean(chicago$pm25detrend,na.rm = TRUE)
chicago <- mutate(chicago, pm25detrend = (pm25-mean(pm25, na.rm = TRUE))/sd(pm25,na.rm = TRUE))
?sd()
head(chicago)
head(select(chicago,pm25, pm25detrend))
mean(chicago$pm25detrend,na.rm = TRUE)
sd(chicago$pm25detrend,na.rm = TRUE)
# group by
chicago <- mutate(chicago, tempcat = factor( 1 * (tmpd > 80), labels = c("cold","hot")))
table(chicago$tempcat)
hotcold <- group_by(chicago, tempcat)
hotcold
class(hotcold)
summarise(hotcold)
summary(hotcold)
summarise(hotcold, pm25 = mean(pm25), o3 = max(o3tmean2), no2 = median(no2tmean2))
summarise(hotcold, pm25 = mean(pm25,na.rm=TRUE), o3 = max(o3tmean2), no2 = median(no2tmean2))
summarize(hotcold, pm25 = mean(pm25,na.rm=TRUE), o3 = max(o3tmean2), no2 = median(no2tmean2))
summarize(hotcold, sum(!is.na(pm25)), o3 = max(o3tmean2), no2 = median(no2tmean2))
chicago <- mutate(chicago, year = as.POSIXlt(date)$year + 1900)
years <- group_by(chicago,year)
summarise(years, pm25 = mean(pm25,na.rm=TRUE), o3 = max(o3tmean2), no2 = median(no2tmean2))
# special operator %>% pipe line
chicago %>% mutate(month = as.POSIXlt(date)$mon + 1) %>% group_by(month) %>% summarise(pm225 = mean(pm25, na.rm = TRUE), o3 = max(o3tmean2), no2 = median(no2tmean2))
# Merging Data???
library(dplyr)
Object <- group_by(NEI_Baltimore, year)
Object
class(Object)
summarise(Object, total = sum(Emissions))
plot(Object)
barplot(Object)
Object <- group_by(NEI_Baltimore, year, type)
Object
class(Object)
summarise(Object, total = sum(Emissions))
class(result)
result <- summarise(Object, total = sum(Emissions))
class(result)
barplot(Object)
barplot(result)
barplot(unclass(result)
)
YearType <- group_by(NEI_Baltimore, year, type)
EmByTypeYear <- summarise(YearType, total = sum(Emissions))
EmByTypeYear
class(EmByTypeYear)
ggplot2
ggplot2
Grammar of Graphics by Leland Wilkinson
library(ggplot2)
# data doivent venir d'un data.frame
# qplot() / ggplot
?mpg
str(mpg)
qplot(displ,hwy, data = mpg)
qplot(total, data = EmByTypeYear)
qplot(displ,hwy, data = mpg)
EmByTypeYear
qplot(total, type, data = EmByTypeYear)
qplot(year, type, data = EmByTypeYear)
# add factor couleur
qplot(displ,hwy, data = mpg, color = drv)
qplot(year,total, data = mpg, color = type)
qplot(year,total, data = EmByTypeYear, color = type)
?qplot()
qplot(displ,hwy, data = mpg, color = drv)
# Add statistic
qplot(displ,hwy, data = mpg, geom = c("point","smooth"))
qplot(year,total, data = EmByTypeYear, color = type, geom = c("point","smooth"))
setwd("/Users/GA/dropbox/Datascience/Universite_Johns-Hopkins/Exploration_analytique_de_donnees/RExplordata/Project2")
EmByTypeYear
table(EmByTypeYear)
qplot(year, type, data = EmByTypeYear)
par(mfrow = c(1,1), mar = c(5.1,4.1,4.1,2.1))
qplot(year, type, data = EmByTypeYear)
par(mfrow = c(1,2), mar = c(5.1,4.1,4.1,2.1))
qplot(year, type, data = EmByTypeYear)
qplot(year, type, data = EmByTypeYear)
qplot(year,total, data = EmByTypeYear, color = type)
EmByTypeYear
qplot(displ,hwy, data = mpg, color = drv)
# Add statistic
qplot(displ,hwy, data = mpg, geom = c("point","smooth"))
# Histogram avec 1 seule var
qplot(hwy, data = mpg)
qplot(hwy, data = mpg, fill = drv)
# Facets (equiv aux panels de lattice )
qplot(displ,hwy, data = mpg, facets =.~drv )
qplot(hwy, data = mpg, facets =.~drv , binwidth = 2)
qplot(hwy, data = mpg, facets =drv~. , binwidth = 2)
qplot(hwy, data = mpg, facets =drv~fl , binwidth = 2)
qplot(hwy, data = mpg, facets =drv~fl , binwidth = 2,color = class )
qplot(hwy, displ, data = mpg, facets =drv~. , binwidth = 2,color = class )
# str(maacs) not available
# qplot(log(eno), data=maacs)
# qplot(log(eno), data=maacs, fill = mopos)
# qplot(log(eno), data=maacs, geom = "density")
# qplot(log(eno), data=maacs, geom = "density", color = mopos)
# qplot(log(pm25),log(eno), data=maacs)
# qplot(log(pm25),log(eno), data=maacs, shape = mopos)
# qplot(log(pm25), log(eno), data=maacs, color = mopos)
# qplot(log(pm25), log(eno), data=maacs, color = mopos, geom = c("point","smooth"),method="lm")
# qplot(log(pm25), log(eno), data=maacs, geom = c("point","smooth"),method="lm",factes=.~mopo)
# tricky to modify... customization
# qplot(logpm25, NocturnalSympt, data=maacs, geom = c("point","smooth"),method="lm",factes=.~bmicat)
# data frame,
# aesthetic mapping : how data are mapped (color size)
# geoms : points, lines , shapes
# facets : for conditional plots
# stats : stat transformation
# scales
# coord syst
# Piece by piece,,, unlike lattice
# in layers : data, overlay a summary, metadata and annotation
# g <- ggplot(maacs, aes(logpm25, Noct...))
# print(g)
# summary(g) ggplot objects
str(mpg)
summary(mpg)
g <- ggplot(mpg, aes(displ,hwy))
print(g) # pas assez d'info...
p <- g + geom_point()
print(p)
g+geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + facet_grid(.~drv) + geom_smooth(method = "lm")
xlab("aaa")
ylab()
labs()
ggtitle()
theme()
# two standard theme
theme_gray()
themebw()
g + geom_point(color ="steelblue",size =4, alpha = 1/2) # aplpha tranparency
g + geom_point(aes(color =drv),size =4, alpha = 1/2)
g + geom_point(aes(color =drv, size =cyl), alpha = 1/2)
g + geom_point(aes(color =drv),size =4, alpha = 1/2) + labs(title = "TITRE") + labs(x = expression("log "*PM[222]), y = "titre axe y")
g + geom_point(aes(color =drv),size =4, alpha = 1/2) + labs(title = "TITRE") + labs(title = "ZATRExxx")+ labs(x = expression("log "*PM), y = "titre axe y")
g + geom_point(aes(color =drv), size =4, alpha = 1/2) + geom_smooth(size = 2, linetype = 2, method = "lm", se = FALSE)
g + geom_point(aes(color =drv), size =4, alpha = 1/2) + geom_smooth(size = 2, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color =drv, size =cyl), alpha = 1/2) + geom_smooth(size = 2, linetype = 2, method = "lm", se = FALSE)
# Change the overall theme
g + geom_point(aes(color =drv))+ theme_bw(base_family = "Times")
testdata <- data.frame(x = 1:100, y=rnorm(100))
testdata[50,2] <- 100 ## outlier
plot(testdata$x,testdata$y, type = "l")
plot(testdata$x,testdata$y, type = "l", ylim = c(-3,3))
g <- ggplot(testdata, aes(x = x, y = y))
g + geom_line()
g + geom_line() + ylim(-3,3) # les donnees en dehors sont sorties... subset
g + geom_line() + coord_cartesian(ylim = c(-3,3)) # idem plot
qplot(year,total, data = EmByTypeYear, color = type)
qplot(year,total, data = EmByTypeYear, color = type, geom = c("point","smooth"))
EmByTypeYear <- summarise(YearType, Emissions = sum(Emissions))
EmByTypeYear
qplot(year,total, data = EmByTypeYear, color = type, geom = c("point","smooth"))
EmByTypeYear <- summarise(YearType, Emissions = sum(Emissions))
EmByTypeYear
qplot(year,Emissions, data = EmByTypeYear, color = type)
qplot(year,Emissions, data = EmByTypeYear, color = type, geom = c("point","smooth"))
png(file = "plot3.png")
qplot(year,Emissions, data = EmByTypeYear, color = type, geom = c("point","smooth"))
dev.off()
SCC <- readRDS("../data/NEI_data/Source_Classification_Code.rds")
SCC <- readRDS(".Source_Classification_Code.rds")
setwd("/Users/GA/dropbox/Datascience/Universite_Johns-Hopkins/Exploration_analytique_de_donnees/RExplordata/Project2")
SCC <- readRDS(".Source_Classification_Code.rds")
SCC <- readRDS("Source_Classification_Code.rds")
View(SCC)
str(SCC)
table(SCC$Option.Group)
table(SCC$Option.Group)
table(SCC$Option.Group)
str(SCC)
table(SCC$Data.Category)
table(SCC$Data.Category)
table(SCC$EI.Sector)
table(SCC$Option.Group)
table(SCC$Option.Set)
table(SCC$SCC.Level.One)
table(SCC$SCC.Level.Two)
table(SCC$SCC.Level.Three)
table(SCC$SCC.Level.Four)
table(SCC$Map.To)
table(SCC$EI.Sector)
levels(SCC$EI.Sector)
Coal_levels <- grep("Coal",levels(SCC$EI.Sector),fixed=TRUE, ignore.case = FALSE)
Coal_levels
table(SCC$Option.Group)
table(SCC$Option.Set)
table(SCC$SCC.Level.One)
table(SCC$SCC.Level.Two)
levels(SCC$EI.Sector)
levels(SCC$EI.Sector)[index_coal]
index_coal <- grep("Coal",levels(SCC$EI.Sector),fixed=TRUE, ignore.case = FALSE)
levels(SCC$EI.Sector)[index_coal]
levels(SCC$EI.Sector)[index_coal]
index_coal <- grep("Coal",levels(SCC$EI.Sector),fixed=TRUE, ignore.case = FALSE)
levels_coal <- levels(SCC$EI.Sector)[index_coal]
SCC_coal <- SCC[SCC$EI.Sector in levels_coal,]
SCC_coal <- SCC[SCC$EI.Sector %in% levels_coal,]
index_coal <- grep("Coal",levels(SCC$EI.Sector),fixed=TRUE, ignore.case = FALSE)
levels_coal <- levels(SCC$EI.Sector)[index_coal]
SCC_coal <- SCC[SCC$EI.Sector %in% levels_coal,]
View(SCC_coal)
NEI_Coal <- NEI[NEI$SCC %in% SCC_coal$SCC,]
library(dplyr)
Year <- group_by(NEI_Coal, year)
EmByYear <- summarise(Year, Emissions = sum(Emissions))
EmByYear
EmByYear
barplot(EmByYear, main = " Total PM2.5 emissions in the US over 10 years",
ylab = "PM2.5 Emissions in tons", density = 20,col = "steelblue")
EmByYear
class(EmByYear)
PM2.5ByYear
class(EmByYear)
unclass(EmByYear)
qplot(year,Emissions, data = EmByYear, color = "blue", geom = c("point","smooth"))
EmByYear
qplot(year,Emissions, data = EmByYear, color = "blue", geom = c("point","smooth"))
qplot(year,Emissions, data = EmByYear, geom = c("point","smooth"))
png(file = "plot3.png")
qplot(year,Emissions, data = EmByTypeYear, color = type, geom = c("point","smooth"))
dev.off()
png(file = "plot4.png")
qplot(year,Emissions, data = EmByYear, geom = c("point","smooth"))
dev.off()
levels(SCC$EI.Sector)
index_coal <- grep("Coal",levels(SCC$EI.Sector),fixed=TRUE, ignore.case = FALSE)
levels_coal <- levels(SCC$EI.Sector)[index_coal]
SCC_coal <- SCC[SCC$EI.Sector %in% levels_coal,]
NEI_Coal <- NEI[NEI$SCC %in% SCC_coal$SCC,]
#----------------------------------------------------------
# Building R object with emission by year
#----------------------------------------------------------
library(dplyr)
Year <- group_by(NEI_Coal, year)
EmByYear <- summarise(Year, Emissions = sum(Emissions))
EmByYear
#----------------------------------------------------------
# Plot in "plot4.png file
#----------------------------------------------------------
library(ggplot2)
png(file = "plot4.png")
qplot(year,Emissions, data = EmByYear, geom = c("point","smooth"))
dev.off()
levels(SCC$EI.Sector)
levels(SCC$SCC.Level.Two)
levels(SCC$Data.Category)
levels(SCC$Short.Name)
levels(SCC$EI.Sector)
levels(SCC$Option.Group)
levels(SCC$Option.Set)
levels(SCC$SCC.Level.One)
levels(SCC$SCC.Level.Two)
grep("vehicle",levels(SCC$SCC.Level.Two),fixed=TRUE, ignore.case = FALSE)
levels(SCC$SCC.Level.Three)
grep("vehicle",levels(SCC$SCC.Level.Three),fixed=TRUE, ignore.case = FALSE)
index_coal <- grep("motor",levels(SCC$EI.Sector),fixed=TRUE, ignore.case = FALSE)
levels(SCC$SCC.Level.Four)
grep("vehicle",levels(SCC$SCC.Level.Four),fixed=TRUE, ignore.case = FALSE)
levels(SCC$Data.Category)
levels(SCC$Short.Name)
grep("vehicle",levels(SCC$SCC.Level.Four),fixed=TRUE, ignore.case = TRUE)
grep("vehicle",levels(SCC$Short.Name),fixed=TRUE, ignore.case = TRUE)
levels(SCC$Short.Name)
grep("Maintenance",levels(SCC$Short.Name),fixed=TRUE, ignore.case = TRUE)
grep("Maintenance",levels(SCC$Short.Name),fixed=TRUE, ignore.case = FALSE)
grep("maintenance",levels(SCC$Short.Name),fixed=TRUE, ignore.case = FALSE)
grep("maintenance",levels(SCC$Short.Name),fixed=TRUE, ignore.case = TRUE)
grep("maintenance",levels(SCC$Short.Name),fixed=TRUE, ignore.case = FALSE)
grep("motor",levels(SCC$EI.Sector),fixed=TRUE, ignore.case = FALSE)
grep("motor",levels(SCC$EI.Sector),fixed=TRUE, ignore.case = TRUE)
grep("motor",levels(SCC$EI.Sector),fixed=TRUE, ignore.case = FALSE)
levels(SCC$Short.Name)
grep("Coating",levels(SCC$Coating),fixed=TRUE, ignore.case = FALSE)
grep("Coating",levels(SCC$Short.Name),fixed=TRUE, ignore.case = FALSE)
grep("coating",levels(SCC$Short.Name),fixed=TRUE, ignore.case = FALSE)
grep("coating",levels(SCC$Short.Name),fixed=TRUE, ignore.case = TRUE)
grep("coating",levels(SCC$Short.Name), ignore.case = TRUE)
grep("vehicule",levels(SCC$Short.Name), ignore.case = TRUE)
grep("motor",levels(SCC$Short.Name), ignore.case = TRUE)
levels(SCC$Short.Name)[index]
index <- grep("motor",levels(SCC$Short.Name), ignore.case = TRUE)
levels(SCC$Short.Name)[index]
index <- grep("Motor Vehicles",levels(SCC$Short.Name), ignore.case = TRUE)
levels(SCC$Short.Name)[index]
levels(SCC$Short.Name)[index]
levels(SCC$Short.Name)
index <- grep("Motor Vehicles",levels(SCC$Short.Name), ignore.case = TRUE)
levels <- levels(SCC$Short.Name)[index]
levels
levels(SCC$Short.Name)
index <- grep("Motor Vehicles",levels(SCC$Short.Name), ignore.case = TRUE)
levels <- levels(SCC$Short.Name)[index]
levels
# Subsetting SCC accordingly
SCC_motor_vehicules <- SCC[SCC$Short.Name %in% levels,]
NEI_motor_vehicules_baltimore <- NEI[NEI$SCC %in% SCC_motor_vehicules$SCC & NEI$fips == "24510",]
library(dplyr)
Year <- group_by(NEI_motor_vehicules_baltimore, year)
EmByYear <- summarise(Year, Emissions = sum(Emissions))
EmByYear
View(NEI_motor_vehicules_baltimore)
NEI_motor_vehicules_baltimore <- NEI[(NEI$SCC %in% SCC_motor_vehicules$SCC) & (NEI$fips == "24510"),]
levels(SCC$Short.Name)
index <- grep("Motor Vehicles",levels(SCC$Short.Name), ignore.case = TRUE)
levels <- levels(SCC$Short.Name)[index]
levels
levels(SCC$Data.Category)
levels(SCC$EI.Sector)
index <- grep("Vehicles",levels(SCC$EI.Sector), ignore.case = TRUE)
levels <- levels(SCC$EI.Sector)[index]
levels
levels(SCC$EI.Sector)
index <- grep("Vehicles",levels(SCC$EI.Sector), ignore.case = TRUE)
levels <- levels(SCC$EI.Sector)[index]
levels
# 4 EI.sectors corresponding to motor vehicle sources
# Subsetting SCC accordingly
SCC_motor_vehicules <- SCC[SCC$EI.Sector %in% levels,]
# Subsetting NEI
NEI_motor_vehicules_baltimore <- NEI[(NEI$SCC %in% SCC_motor_vehicules$SCC) & (NEI$fips == "24510"),]
#----------------------------------------------------------
# Building R object with emission by year
#----------------------------------------------------------
library(dplyr)
Year <- group_by(NEI_motor_vehicules_baltimore, year)
EmByYear <- summarise(Year, Emissions = sum(Emissions))
EmByYear
#----------------------------------------------------------
# Plot in "plot5.png file
#----------------------------------------------------------
library(ggplot2)
qplot(year,Emissions, data = EmByYear, geom = c("point","smooth"))
png(file = "plot5.png")
qplot(year,Emissions, data = EmByYear, geom = c("point","smooth"))
dev.off()
levels(SCC$EI.Sector)
index <- grep("Vehicles",levels(SCC$EI.Sector), ignore.case = TRUE)
levels <- levels(SCC$EI.Sector)[index]
levels
# 4 EI.sectors corresponding to motor vehicle sources
# Subsetting SCC accordingly
NEI_motor_vehicules_baltimore_and_LA <- NEI[(NEI$SCC %in% SCC_motor_vehicules$SCC) & (NEI$fips %in%  c("24510","06037"),]
NEI_motor_vehicules_baltimore_and_LA <- NEI[(NEI$SCC %in% SCC_motor_vehicules$SCC) & (NEI$fips %in%  c("24510","06037")),]
View(NEI_motor_vehicules_baltimore_and_LA)
NEI_motor_vehicules_baltimore_and_LA[NEI_motor_vehicules_baltimore_and_LA$fips == 24510,]$fips <- "Baltimore"
NEI_motor_vehicules_baltimore_and_LA[NEI_motor_vehicules_baltimore_and_LA$fips == 06037,]$fips <- "Los Angeles County"
NEI_motor_vehicules_baltimore_and_LA[NEI_motor_vehicules_baltimore_and_LA$fips == "24510",]$fips <- "Baltimore"
NEI_motor_vehicules_baltimore_and_LA[NEI_motor_vehicules_baltimore_and_LA$fips == "06037",]$fips <- "Los Angeles County"
NEI_motor_vehicules_baltimore_and_LA <- NEI[(NEI$SCC %in% SCC_motor_vehicules$SCC) & (NEI$fips %in%  c("24510","06037")),]
#----------------------------------------------------------
# Building R object with emission by year
#----------------------------------------------------------
library(dplyr)
NEI_motor_vehicules_baltimore_and_LA[NEI_motor_vehicules_baltimore_and_LA$fips == "24510",]$fips <- "Baltimore"
NEI_motor_vehicules_baltimore_and_LA[NEI_motor_vehicules_baltimore_and_LA$fips == "06037",]$fips <- "Los Angeles County"
NEI_motor_vehicules_baltimore_and_LA <- NEI[(NEI$SCC %in% SCC_motor_vehicules$SCC) & (NEI$fips %in%  c("24510","06037")),]
#----------------------------------------------------------
# Building R object with emission by year
#----------------------------------------------------------
NEI_motor_vehicules_baltimore_and_LA[NEI_motor_vehicules_baltimore_and_LA$fips == "24510",]$fips <- "Baltimore City"
NEI_motor_vehicules_baltimore_and_LA[NEI_motor_vehicules_baltimore_and_LA$fips == "06037",]$fips <- "Los Angeles County"
NEI_motor_vehicules_baltimore_and_LA <- NEI[(NEI$SCC %in% SCC_motor_vehicules$SCC) & (NEI$fips %in%  c("24510","06037")),]
NEI_motor_vehicules_baltimore_and_LA
NEI_motor_vehicules_baltimore_and_LA <- NEI[(NEI$SCC %in% SCC_motor_vehicules$SCC) & (NEI$fips %in%  c("24510","06037")),]
#----------------------------------------------------------
# Building R object with emission by year
#----------------------------------------------------------
library(dplyr)
Year <- group_by(NEI_motor_vehicules_baltimore_and_LA, year)
Year <- group_by(NEI_motor_vehicules_baltimore_and_LA, year, fips)
EmByYearFips <- summarise(Year, Emissions = sum(Emissions))
EmByYearFips
NEI_motor_vehicules_baltimore_and_LA[NEI_motor_vehicules_baltimore_and_LA$fips == "24510",]$fips <- "Baltimore City"
NEI_motor_vehicules_baltimore_and_LA[NEI_motor_vehicules_baltimore_and_LA$fips == "06037",]$fips <- "Los Angeles County"
Year <- group_by(NEI_motor_vehicules_baltimore_and_LA, year, fips)
EmByYearFips <- summarise(Year, Emissions = sum(Emissions))
EmByYearFips
library(ggplot2)
png(file = "plot5.png")
qplot(year,Emissions, data = EmByYear, geom = c("point","smooth"), color = fips)
dev.off()
EmByYearFips
#----------------------------------------------------------
# Plot in "plot5.png file
#----------------------------------------------------------
library(ggplot2)
qplot(year,Emissions, data = EmByYear, color = fips, geom = c("point","smooth"))
qplot(year,Emissions, data = EmByTypeYear, color = type, geom = c("point","smooth"))
EmByTypeYear
EmByYearFips
qplot(year,Emissions, data = EmByYearFips, color = fips, geom = c("point","smooth"))
# qplot() / ggplot
?mpg
str(mpg)
qplot(displ,hwy, data = mpg)
# add factor couleur
qplot(displ,hwy, data = mpg, color = drv)
# Add statistic
qplot(displ,hwy, data = mpg, geom = c("point","smooth"))
# Histogram avec 1 seule var
qplot(hwy, data = mpg)
qplot(hwy, data = mpg, fill = drv)
# Facets (equiv aux panels de lattice )
qplot(displ,hwy, data = mpg, facets =.~drv )
qplot(year,Emissions, data = EmByYearFips, facets =.~fips, geom = c("point","smooth"))
qplot(displ,hwy, data = mpg, facets =.~drv )
qplot(hwy, data = mpg, facets =.~drv , binwidth = 2)
qplot(hwy, data = mpg, facets =drv~. , binwidth = 2)
qplot(hwy, data = mpg, facets =drv~fl , binwidth = 2)
qplot(year,Emissions, data = EmByYearFips, facets =.~fips, geom = c("point","smooth"))
png(file = "plot6.png")
qplot(year,Emissions, data = EmByYearFips, facets =.~fips, geom = c("point","smooth"))
dev.off()
